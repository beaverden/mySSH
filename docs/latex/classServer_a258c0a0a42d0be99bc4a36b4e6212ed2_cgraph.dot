digraph "Server::connectionListen"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Server::connectionListen",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="Logger::log",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLogger.html#aad1588639bb45eab5a33a40fc58d0e94",tooltip="Log formatted data with variable number of arguments (simmilar to printf) "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="Server::getInstance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a22dbfd5db73d391d615a0bfd69077fb6"];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="Server::serverRoutine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a47b6e405d109cdd27838220684f0e2e5",tooltip="Prepares execution environment. Runs out and input data streams, spawns a shell for the client..."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="Server::handleAuth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a7d999a07f62d1d3d7dff37b6935c01a6"];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="recv_packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Packet_8h.html#adaa6274c063dfae816caaf9a68774698",tooltip="Recieves a SSH_Packet from an SSL socket. Reads each part and assembles it into the structure..."];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="check_shutdown",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Packet_8cpp.html#acce65f288b2aed7670bee2f6dfbbb882"];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="sha_digest",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Packet_8cpp.html#a707a865009d80b22ee19d46a59d81e94"];
  Node6 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node5 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node5 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="ArgumentsException\l::what",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classArgumentsException.html#aa970dadd44c523df99070343c164343c"];
  Node5 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="send_packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Packet_8h.html#a723198aebc9baad8998255313981e357",tooltip="Sends data in form of a SSH_Packet to the SSL socket given. "];
  Node10 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node10 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node10 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node4 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="Server::spawnShell",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a4e9f6422ec55d311b9588975f81ae3bd",tooltip="Spawns a shell with input/output/error redirected with data streams. "];
  Node4 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="Server::inputDataStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a8d9328ec355e42c8abf49ae0d4771399",tooltip="Constantly reads from SSL socket and redirects it to the shell. "];
  Node12 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node12 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="Server::sendSignal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a180800432b9ecffdbc050f4c66f8abd2"];
  Node4 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="Server::outputDataStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a0b247f8f2166b36c3575c4678d0755e9",tooltip="Constantly reads output from the shell and outputs it to the SSL socket. "];
  Node14 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node4 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node4 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node4 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
}
