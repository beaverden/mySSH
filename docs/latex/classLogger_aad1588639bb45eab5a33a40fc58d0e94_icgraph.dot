digraph "Logger::log"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Logger::log",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="Logger::log",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLogger.html#ac5ac87e0629a7b4073a57798026df92a",tooltip="Log only if the specific flag with prefix LOG is set. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="send_packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Packet_8cpp.html#a723198aebc9baad8998255313981e357",tooltip="Sends data in form of a SSH_Packet to the SSL socket given. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="sigHandler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$client_8cpp.html#a6fbd5f39facef76ebf39841ec216c287"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="main",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$client_8cpp.html#a0ddf1224851353fc92bfbff6f499fa97"];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="handleAuth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$client_8cpp.html#acc99c06b8569296d01808f0193b0e44c"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="writingRoutine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$client_8cpp.html#a431ad8c77691faa3a9c61245742e432d"];
  Node7 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="Server::outputDataStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a0b247f8f2166b36c3575c4678d0755e9",tooltip="Constantly reads output from the shell and outputs it to the SSL socket. "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="Server::serverRoutine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a47b6e405d109cdd27838220684f0e2e5",tooltip="Prepares execution environment. Runs out and input data streams, spawns a shell for the client..."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="Server::connectionListen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a258c0a0a42d0be99bc4a36b4e6212ed2",tooltip="Listens to connections, fork()&#39;s a child running a shell, reading and writing sessions for each conne..."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="main",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$server_2src_2main_8cpp.html#a0ddf1224851353fc92bfbff6f499fa97"];
  Node3 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="Server::sendError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#abc80f4931ae5b5860a9f70ffac1b89c5",tooltip="Sends an error to the SSL socket. "];
  Node3 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="Server::handleAuth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a7d999a07f62d1d3d7dff37b6935c01a6"];
  Node13 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="recv_packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Packet_8cpp.html#adaa6274c063dfae816caaf9a68774698",tooltip="Recieves a SSH_Packet from an SSL socket. Reads each part and assembles it into the structure..."];
  Node14 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="readingRoutine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$client_8cpp.html#a27a351c36242ef9bb012af52da279653"];
  Node15 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="Server::inputDataStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a8d9328ec355e42c8abf49ae0d4771399",tooltip="Constantly reads from SSL socket and redirects it to the shell. "];
  Node16 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="Server::initializeSecurity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#a54da775247c049b9cc78c92946bb058a",tooltip="Prepare private key, certificates and create SSL context Might throw: SecurityException. "];
  Node17 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="Server::initializeSockets",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServer.html#afee42c59df0ce3e03fa5d6ed2b1cdccc",tooltip="Prepare a server socket for listening on the given port. Sets Server::listeningSocket on success..."];
  Node18 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
